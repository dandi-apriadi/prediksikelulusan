# Setup Server Ubuntu LTS untuk prediksikelulusanmahasiswa.site

Catatan umum:
- Diuji untuk Ubuntu 24.04 LTS (noble). Jika Anda memakai 22.04 (jammy), ganti codename repo MongoDB ke `jammy`.
- Aplikasi: Flask + Gunicorn + Nginx, DB: MongoDB lokal, domain: prediksikelulusanmahasiswa.site.
- Kode diambil dari GitHub ke VPS, install dep dari `requirements-linux.txt`.
- Jalankan semua perintah di bawah ini di VPS via SSH (kecuali langkah DNS).

============================================
1) DNS (di penyedia domain/DNS Anda)
============================================
- A record: prediksikelulusanmahasiswa.site -> IP Publik VPS
- A record (opsional): www.prediksikelulusanmahasiswa.site -> IP Publik VPS
- (Opsional) AAAA untuk IPv6 jika tersedia

Tunggu propagasi beberapa menit sebelum lanjut ke HTTPS.

============================================
2) SSH ke VPS dari komputer lokal (Windows PowerShell)
============================================
Contoh:
ssh ubuntu@IP_VPS_ANDA

Ganti `ubuntu` dengan user Anda jika berbeda.

============================================
3) Update sistem & install paket dasar
============================================
sudo apt update && sudo apt -y upgrade
sudo apt -y install nginx git python3-venv python3-pip unzip ufw
sudo apt -y install certbot python3-certbot-nginx

============================================
4) Install MongoDB Community 7.0 dan enable
============================================
# Siapkan variabel codename Ubuntu
UBUNTU_CODENAME=$( . /etc/os-release; echo "$VERSION_CODENAME" )

# Import kunci GPG MongoDB
curl -fsSL https://pgp.mongodb.com/server-7.0.asc | sudo gpg -o /usr/share/keyrings/mongodb-server-7.0.gpg --dearmor

# Tambah repo MongoDB (untuk noble/jammy)
echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu ${UBUNTU_CODENAME}/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list

sudo apt update
sudo apt -y install mongodb-org mongodb-database-tools

# Start & enable
sudo systemctl enable --now mongod
sudo systemctl status mongod --no-pager

============================================
5) Clone repo ke VPS & buat virtualenv Python
============================================
sudo mkdir -p /opt/prediksikelulusan
sudo chown -R "$USER":"$USER" /opt/prediksikelulusan
cd /opt/prediksikelulusan

# Jika repo publik:
git clone https://github.com/dandi-apriadi/prediksikelulusan.git .
# Jika repo private, gunakan SSH atau token GitHub (PAT)
# git clone git@github.com:dandi-apriadi/prediksikelulusan.git .

# Buat dan aktifkan virtualenv
python3 -m venv env
source env/bin/activate

# Upgrade pip dan install requirements Linux
pip install --upgrade pip
pip install -r requirements-linux.txt

deactivate

============================================
6) Seed data MongoDB (opsional tapi disarankan)
============================================
# Import user awal dan daftar mata kuliah ke DB 'tugasakhir'
cd /opt/prediksikelulusan
mongoimport --db tugasakhir --collection users --jsonArray --file tugasakhir.users.json
mongoimport --db tugasakhir --collection mata_kuliah --jsonArray --file tugasakhir.mata_kuliah.json

# Catatan: Jika Anda ingin re-import, pertimbangkan drop koleksi dulu:
# mongosh --eval 'use tugasakhir; db.users.drop(); db.mata_kuliah.drop();'

============================================
7) Buat service systemd untuk Gunicorn
============================================
# Jika user VPS Anda bukan 'ubuntu', ganti di baris User=ubuntu
sudo tee /etc/systemd/system/prediksi.service > /dev/null << 'EOF'
[Unit]
Description=Prediksi Kelulusan Flask (Gunicorn)
After=network.target mongod.service

[Service]
User=ubuntu
WorkingDirectory=/opt/prediksikelulusan
Environment=PYTHONUNBUFFERED=1
# Optional: pindahkan konfigurasi sensitif ke env var di masa depan
# Environment=FLASK_ENV=production
# Environment=MONGO_URI=mongodb://localhost:27017/tugasakhir
ExecStart=/opt/prediksikelulusan/env/bin/gunicorn --workers 3 --threads 2 --timeout 180 --bind 127.0.0.1:8000 app:app
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF

sudo systemctl daemon-reload
sudo systemctl enable --now prediksi
sudo systemctl status prediksi --no-pager

# Lihat log aplikasi (opsional)
# sudo journalctl -u prediksi -f

============================================
8) Konfigurasi Nginx reverse proxy + static
============================================
# Nonaktifkan site default (opsional, mencegah konflik)
sudo rm -f /etc/nginx/sites-enabled/default

# Buat server block untuk domain
sudo tee /etc/nginx/sites-available/prediksikelulusan > /dev/null << 'EOF'
server {
	listen 80;
	listen [::]:80;
	server_name prediksikelulusanmahasiswa.site www.prediksikelulusanmahasiswa.site;

	# Upload limit (sesuaikan jika perlu)
	client_max_body_size 20m;

	# Serve static langsung via Nginx
	location /static/ {
		alias /opt/prediksikelulusan/static/;
		access_log off;
		expires 30d;
	}

	location / {
		proxy_pass http://127.0.0.1:8000;

		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-For $remote_addr;
		proxy_set_header X-Forwarded-Host $host;
		proxy_http_version 1.1;
		proxy_set_header Connection "";

		# Timeouts untuk proses prediksi/SHAP
		proxy_read_timeout 300;
		proxy_connect_timeout 300;
		proxy_send_timeout 300;
	}
}
EOF

sudo ln -sf /etc/nginx/sites-available/prediksikelulusan /etc/nginx/sites-enabled/prediksikelulusan
sudo nginx -t && sudo systemctl reload nginx

============================================
9) Pasang sertifikat HTTPS (Let’s Encrypt)
============================================
# Pastikan DNS sudah mengarah ke VPS dan port 80 terbuka
sudo certbot --nginx -d prediksikelulusanmahasiswa.site -d www.prediksikelulusanmahasiswa.site --redirect -m EMAIL_ANDA@example.com --agree-tos -n

# Uji auto-renew
sudo certbot renew --dry-run

============================================
10) Firewall (UFW)
============================================
sudo ufw allow OpenSSH
sudo ufw allow 'Nginx Full'
sudo ufw --force enable
sudo ufw status

============================================
11) Alur deploy setelah update di GitHub
============================================
cd /opt/prediksikelulusan

git pull
source env/bin/activate
pip install -r requirements-linux.txt
deactivate
sudo systemctl restart prediksi
sudo systemctl status prediksi --no-pager

# Jika repo private, siapkan SSH deploy key atau gunakan PAT untuk HTTPS.

============================================
12) Verifikasi & troubleshooting cepat
============================================
# Cek service app
sudo journalctl -u prediksi -f

# Cek Nginx
sudo tail -n 200 /var/log/nginx/access.log
sudo tail -n 200 /var/log/nginx/error.log

# Health check (di VPS)
curl -I http://127.0.0.1:8000/
curl -I https://prediksikelulusanmahasiswa.site/

============================================
Catatan produksi & keamanan
============================================
- Saat ini `MONGO_URI` dan `SECRET_KEY` hard-coded di app.py. Untuk produksi, lebih aman menggunakan environment variable (tambahkan ke Service [Service] Environment=...).
- Pertimbangkan mengaktifkan autentikasi MongoDB dan membuat user khusus aplikasi, lalu update `MONGO_URI` ke format ber-username/password.
- Sesuaikan jumlah worker Gunicorn (`--workers`) dengan jumlah CPU: rule of thumb 2–4 x core untuk workload CPU-bound, dan `--threads` untuk workload campuran.
- Jika build sains data gagal (jarang), pasang toolchain: `sudo apt -y install build-essential python3-dev` lalu ulangi install requirements.
